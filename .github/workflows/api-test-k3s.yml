name: API-TEST-K3S

on:
  workflow_dispatch:
    inputs:
      TEST_MODULE:
        description: 'TEST_MODULE file or path'
        required: false
        default: ''
      CASE_NAME:
        description: 'test case name'
        required: false
        default: 'api-test-k3s'
      BRANCH_NAME:
        description: 'testinfra branch name'
        required: false
        default: 'main'
      RELEASE_VERSION:
        description: 'kubeblocks release version'
        required: false
        default: ''



run-name: ${{ github.event.inputs.RELEASE_VERSION }}:${{ github.event.inputs.CASE_NAME }}

env:
  GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
  GO_VERSION: '1.19'
  HELM_VERSION: 'v3.10.0'
  K3D_NAME: default

jobs:
  k3s-api-test:
    runs-on: ubuntu-latest
#    container: docker.io/apecloud/github-runner:docker-latest
    strategy:
      fail-fast: false
      matrix:
        k3s: [ v1.25 ]
#        k3s: [ latest, v1.25, v1.24, v1.23, v1.22 ]
    name: K3s ${{matrix.k3s}}
    steps:
      - uses: azure/setup-kubectl@v3
        with:
          version: "latest"

      - name: setup k3s
        uses: JashBook/setup-k3d-k3s@v1
        with:
          k3d-name: ${{ env.K3D_NAME }}
          version: ${{ matrix.k3s }}
          github-token: ${{ env.GITHUB_TOKEN }}
          k3d-args: --no-lb --k3s-node-label topology.hostpath.csi/node=k3d-default-server-0@server:0

      - name: checkout testinfra
        uses: actions/checkout@v3
        with:
          repository: apecloud/testinfra
          ref: ${{ github.event.inputs.BRANCH_NAME }}
          path: ./
          token: ${{ env.GITHUB_TOKEN }}

      - name: install kubeblocks
        run: |
          bash .github/utils/kbcli-test.sh --type 0 \
              --kubeblocks-version ${{ github.event.inputs.RELEASE_VERSION }} \
              --random-namespace false \
              --args "--check-addon false --upgrade true --enable-addon csi-hostpath-driver|fault-chaos-mesh" 

      - name: create cluster
        run: |
          bash .github/utils/kbcli-test.sh --type 1 \
              --kubeblocks-version ${{ github.event.inputs.RELEASE_VERSION }} \
              --random-namespace false \
              --args "--only-cluster true --smartengine true --replicas 1" 
          
#      - name: setup Go
#        uses: actions/setup-go@v3
#        with:
#          go-version: ${{ env.GO_VERSION }}
#
#      - name: Install ginkgo
#        run: |
#          go install github.com/onsi/ginkgo/v2/ginkgo@v2.5.1
#          go install github.com/onsi/gomega/...
#
#      - name: run test
#        run: |
#          bash .github/utils/change-wesql-cd.sh \
#            ./ ${{ github.event.inputs.CHANGE_FLAG }}
#
#          make api-test TEST_MODULE=${{ github.event.inputs.TEST_MODULE }}
